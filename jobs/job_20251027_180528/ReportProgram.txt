REPORT ZMM_CLOSE_OPEN_PO.

TABLES: EKKO, EKPO, ZPO_CLOSE_LOG.

TYPES: BEGIN OF ty_po_close,
         ebeln TYPE EKKO-EBELN,
         ebelp TYPE EKPO-EBELP,
         lifnr TYPE EKPO-LIFNR,
         matnr TYPE EKPO-MATNR,
         open_qty TYPE EKPO-MENGE,
         closure_flag TYPE CHAR1,
         status_msg TYPE STRING,
       END OF ty_po_close.

DATA: lt_po_close TYPE TABLE OF ty_po_close,
      ls_po_close TYPE ty_po_close,
      lv_simulate TYPE CHAR1.

SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-001.
PARAMETERS: p_ekorg TYPE EKKO-EKORG OBLIGATORY,
            p_werks TYPE EKPO-WERKS OBLIGATORY,
            p_lifnr TYPE EKPO-LIFNR,
            p_ebeln  TYPE EKKO-EBELN,
            p_date_from TYPE DATS,
            p_date_to TYPE DATS,
            p_simulate TYPE CHAR1 AS CHECKBOX.
SELECTION-SCREEN END OF BLOCK b1.

INITIALIZATION.
  p_simulate = 'X'.

START-OF-SELECTION.
  PERFORM fetch_open_pos.
  PERFORM display_alv.

FORM fetch_open_pos.
  " Fetch open purchase orders based on selection criteria
  SELECT ebeln, ebelp, lifnr, matnr, menge
    INTO TABLE lt_po_close
    FROM ekpo
    WHERE ebeln IN ( SELECT ebeln FROM ekko
                     WHERE ekorg = p_ekorg
                     AND werks = p_werks
                     AND lifnr = p_lifnr
                     AND ebeln LIKE p_ebeln
                     AND bedat BETWEEN p_date_from AND p_date_to )
    AND menge > 0.

  " Initialize closure flag and status message
  LOOP AT lt_po_close INTO ls_po_close.
    ls_po_close-closure_flag = ' '.
    ls_po_close-status_msg = ''.
    MODIFY lt_po_close FROM ls_po_close.
  ENDLOOP.
ENDFORM.

FORM display_alv.
  DATA: lo_alv TYPE REF TO cl_gui_alv_grid,
        lt_fieldcat TYPE lvc_t_fcat,
        ls_fieldcat TYPE lvc_s_fcat.

  " Define field catalog for ALV display
  CLEAR ls_fieldcat.
  ls_fieldcat-fieldname = 'EBELN'.
  ls_fieldcat-seltext_m = 'PO Number'.
  APPEND ls_fieldcat TO lt_fieldcat.

  CLEAR ls_fieldcat.
  ls_fieldcat-fieldname = 'EBELP'.
  ls_fieldcat-seltext_m = 'Item'.
  APPEND ls_fieldcat TO lt_fieldcat.

  CLEAR ls_fieldcat.
  ls_fieldcat-fieldname = 'LIFNR'.
  ls_fieldcat-seltext_m = 'Vendor'.
  APPEND ls_fieldcat TO lt_fieldcat.

  CLEAR ls_fieldcat.
  ls_fieldcat-fieldname = 'MATNR'.
  ls_fieldcat-seltext_m = 'Material'.
  APPEND ls_fieldcat TO lt_fieldcat.

  CLEAR ls_fieldcat.
  ls_fieldcat-fieldname = 'OPEN_QTY'.
  ls_fieldcat-seltext_m = 'Open Qty'.
  APPEND ls_fieldcat TO lt_fieldcat.

  CLEAR ls_fieldcat.
  ls_fieldcat-fieldname = 'CLOSURE_FLAG'.
  ls_fieldcat-seltext_m = 'Closure Flag'.
  APPEND ls_fieldcat TO lt_fieldcat.

  CLEAR ls_fieldcat.
  ls_fieldcat-fieldname = 'STATUS_MSG'.
  ls_fieldcat-seltext_m = 'Status Message'.
  APPEND ls_fieldcat TO lt_fieldcat.

  " Create ALV Grid
  CREATE OBJECT lo_alv
    EXPORTING
      container_name = 'ALV_CONTAINER'.

  " Set ALV data
  CALL METHOD lo_alv->set_table_for_first_display
    EXPORTING
      it_fieldcat = lt_fieldcat
    CHANGING
      it_outtab  = lt_po_close.

  " Refresh ALV display
  CALL METHOD lo_alv->refresh_table_display.
ENDFORM.

FORM close_selected_pos.
  " Close selected purchase orders
  LOOP AT lt_po_close INTO ls_po_close WHERE closure_flag = 'X'.
    CALL FUNCTION 'BAPI_PO_CHANGE'
      EXPORTING
        purchaseorder = ls_po_close-ebeln
        itemnumber    = ls_po_close-ebelp
        delivery_complete = 'X'
      IMPORTING
        return = DATA(lv_return).

    IF lv_return-type = 'S'.
      ls_po_close-status_msg = 'Closed Successfully'.
    ELSE.
      ls_po_close-status_msg = lv_return-message.
    ENDIF.

    " Log the closure in custom table
    INSERT VALUE #( ebeln = ls_po_close-ebeln
                     ebelp = ls_po_close-ebelp
                     status_msg = ls_po_close-status_msg ) INTO zpo_close_log.
  ENDLOOP.
ENDFORM.

AT USER-COMMAND.
  IF sy-ucomm = 'CLOSE'.
    IF p_simulate = 'X'.
      " Simulate mode, just display message
      LOOP AT lt_po_close INTO ls_po_close.
        ls_po_close-status_msg = 'Simulation: No changes made'.
        MODIFY lt_po_close FROM ls_po_close.
      ENDLOOP.
    ELSE.
      PERFORM close_selected_pos.
    ENDIF.
    PERFORM display_alv.
  ENDIF.

END-OF-SELECTION.
  COMMIT WORK AND WAIT.
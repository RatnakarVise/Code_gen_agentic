Certainly! Below is the full ABAP report code for the program `ZMM_CLOSE_OPEN_PO`, which automates the closure of open Purchase Orders (POs) in SAP MM. The code includes the selection screen parameters, data selection logic, ALV grid display, and functionality to close selected POs.

### 1) Full ABAP Report Code

```abap
REPORT zmm_close_open_po.

INCLUDE zmm_close_po_top.
INCLUDE zmm_close_po_sel.
INCLUDE zmm_close_po_f01.
INCLUDE zmm_close_po_alv.

* Global Declarations
INCLUDE zmm_close_po_top.

DATA: gt_po_data TYPE TABLE OF zstr_po_close,
      gs_po_data TYPE zstr_po_close,
      gt_selected_po TYPE TABLE OF zstr_po_close,
      gv_simulate TYPE char1.

* Selection Screen
INCLUDE zmm_close_po_sel.

* Form Routines
INCLUDE zmm_close_po_f01.

* ALV Logic
INCLUDE zmm_close_po_alv.

START-OF-SELECTION.
  PERFORM fetch_open_pos.
  PERFORM display_alv.

AT USER-COMMAND.
  CASE sy-ucomm.
    WHEN 'CLOSE'.
      PERFORM close_selected_pos.
  ENDCASE.

*&---------------------------------------------------------------------*
*&      Form  fetch_open_pos
*&---------------------------------------------------------------------*
FORM fetch_open_pos.
  SELECT e~ebeln e~ebelp e~matnr e~lifnr e~menge e~wemng e~aedat
         INTO TABLE gt_po_data
         FROM ekko AS e
         INNER JOIN ekpo AS p ON e~ebeln = p~ebeln
         WHERE e~bukrs IN s_bukrs
           AND e~ekorg IN s_ekorg
           AND e~ekgrp IN s_ekgrp
           AND e~lifnr IN s_lifnr
           AND e~matnr IN s_matnr
           AND e~aedat BETWEEN s_date-low AND s_date-high
           AND p~elikz = ''
           AND p~elikz = ''
           AND NOT EXISTS (SELECT * FROM ekbe WHERE ebeln = e~ebeln AND budat >= sy-datum - 60).
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  display_alv
*&---------------------------------------------------------------------*
FORM display_alv.
  DATA: lt_fieldcat TYPE lvc_t_fcat,
        ls_layout   TYPE lvc_s_layo.

  CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name = 'ZSTR_PO_CLOSE'
    CHANGING
      ct_fieldcat      = lt_fieldcat.

  ls_layout-zebra = 'X'.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
      i_callback_program = sy-repid
      is_layout          = ls_layout
    TABLES
      t_outtab          = gt_po_data
      t_fieldcat        = lt_fieldcat
    EXCEPTIONS
      program_error     = 1
      OTHERS            = 2.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  close_selected_pos
*&---------------------------------------------------------------------*
FORM close_selected_pos.
  LOOP AT gt_po_data INTO gs_po_data WHERE flag_close = 'X'.
    IF gv_simulate = 'X'.
      gs_po_data-message = 'Simulated closure'.
    ELSE.
      CALL FUNCTION 'BAPI_PO_CHANGE'
        EXPORTING
          purchaseorder = gs_po_data-ebeln
        TABLES
          return        = lt_return.

      IF sy-subrc = 0.
        gs_po_data-message = 'Closed successfully'.
        gs_po_data-status = 'S'.
        PERFORM log_closure USING gs_po_data.
      ELSE.
        gs_po_data-message = 'Closure failed'.
        gs_po_data-status = 'F'.
      ENDIF.
    ENDIF.
    MODIFY gt_po_data FROM gs_po_data.
  ENDLOOP.

  PERFORM display_alv.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  log_closure
*&---------------------------------------------------------------------*
FORM log_closure USING ps_po_data TYPE zstr_po_close.
  DATA: ls_log TYPE zpo_close_log.

  ls_log-mandt = sy-mandt.
  ls_log-ebeln = ps_po_data-ebeln.
  ls_log-ebelp = ps_po_data-ebelp.
  ls_log-ernam = sy-uname.
  ls_log-erdat = sy-datum.
  ls_log-erzet = sy-uzeit.
  ls_log-status = ps_po_data-status.
  ls_log-message = ps_po_data-message.

  INSERT INTO zpo_close_log VALUES ls_log.
ENDFORM.
```

### 2) USAGE Section

**USAGE:**

- **Structure `ZSTR_PO_CLOSE`:** This structure is used to hold the purchase order data and closure information. It acts as a blueprint for the internal table `gt_po_data`, which stores the data fetched from the database and is displayed in the ALV grid. The fields in this structure, such as `EBELN`, `EBELP`, `MATNR`, `LIFNR`, `MENGE`, `WEMNG`, `OPEN_QTY`, `AEDAT`, `FLAG_CLOSE`, and `MESSAGE`, are used to manage and display the lifecycle of open POs.

- **Table `ZPO_CLOSE_LOG`:** This custom transparent table is used to store audit log entries for the closure of POs. The form routine `log_closure` inserts entries into this table, capturing details such as the purchase order number, item number, user who executed the closure, date and time of closure, status, and any messages. This ensures traceability and provides an audit trail for closed POs.

The program leverages these structures and tables to efficiently manage the closure of open POs, providing a user-friendly interface for business users to perform this task systematically.